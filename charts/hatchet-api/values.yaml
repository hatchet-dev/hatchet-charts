image:
  repository: "ghcr.io/hatchet-dev/hatchet/hatchet-api"
  tag: "v0.32.3"
  pullPolicy: "Always"

migrationJob:
  enabled: true
  image:
    repository: "ghcr.io/hatchet-dev/hatchet/hatchet-migrate"
    tag: "v0.32.3"
    pullPolicy: "Always"

commandline:
  command: ["/hatchet/hatchet-api"]
  args: []

cloudSQLSidecar:
  enabled: false
  address: ""
  resources:
    limits:
      memory: 512Mi
    requests:
      cpu: 500m
      memory: 512Mi

retainFailedHooks: false

env: {}

envFrom: []

files: {}

deployment:
  annotations:
    app.kubernetes.io/name: hatchet-api
  labels: {}

persistence:
  size: 5Gi

service:
  type: ClusterIP
  externalPort: 8080
  internalPort: 8080

  # externalIPs:
  # - 192.168.0.1
  #
  ## LoadBalancer IP if service.type is LoadBalancer
  # loadBalancerIP: 10.2.2.2
  annotations: {}
  labels: {}
  ## Limit load balancer source ips to list of CIDRs (where available)
  # loadBalancerSourceRanges: []
  selector: {}
  # portName: service-port

ingress:
  enabled: true
  # For k8s 1.18+
  # ingressClassName:
  labels: {}
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
  # - host: example.mydomain.com
  #   paths:
  #     - path: /
  tls:
  # - secretName: example.mydomain.com
  #   hosts:
  #     - example.mydomain.com
  # servicePort: service-port
  pathType: ImplementationSpecific

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  # If set and create is false, the service account must be existing
  name:
  annotations: {}

extraContainers: []

extraVolumeMounts: []

extraVolumes: []

resources:
  limits:
    memory: 1024Mi
  requests:
    cpu: 250m
    memory: 1024Mi

priorityClassName: ""

# Affinity for pod assignment
# Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
# affinity: {}

# Tolerations for pod assignment
# Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# Node labels for pod assignment
# Ref: https://kubernetes.io/docs/user-guide/node-selection/
nodeSelector: {}

# Common annotations for all pods
podAnnotations: {}

# Increasing replica count will deploy a separate pod for backend and jobs
# Example: with 3 replicas, you will end up with 3 backends + 1 jobs pod
replicaCount: 1
revisionHistoryLimit: 3

# podDisruptionBudget:
#   maxUnavailable: 1

# default security context
securityContext:
  enabled: false
  allowPrivilegeEscalation: false
  runAsUser: 1000
  fsGroup: 2000

extraConfigMapMounts: []

initContainers: []

extraManifests: []

# Support for AWS Security groups for pods
# Ref: https://docs.aws.amazon.com/eks/latest/userguide/security-groups-for-pods.html
securityGroupPolicy:
  enabled: false
  groupIds: []

health:
  enabled: false
